%%
%     Curso do canal ExataMenteS
%     Aula 66 - Regressao Polinominal
%     Se inscreva no canal e nos ajude a crescer <3
%     https://www.youtube.com/channel/UCZyFebN0_gF2yy5fhVhlXtA
%     Professor: Joao Pinheiro
%     Copyright https://github.com/joaomh
%%

% Signal
n = 5000;
t = (1:n)';
k = 20;    % Number of random amplitudes

% Iinterpolated set of points
SignalInterp = interp1(100*randn(k,1),linspace(1,k,n) ,'pchip')';

% Signal with some noise
Noise = 30*randn(n,1);
Signal = SignalInterp + Noise;

% Bayesian information criterion to determine the optimal polynomial order empirically

Orders = (2:50)';                 % Range of orders
SumError = zeros( length(Orders),1 ); % Sum of squared errors

% Loop
for i = 1:length(Orders)
    
    % Compute the polynomial
    PolyData = polyval(polyfit( t,Signal,Orders(i) ), t); 

    % Estimated data based on the coefficients using polyval
    SumError(i) = sum( (PolyData - Signal).^2 );
end

% Bayes information criteria
BIC = n*log(SumError) + Orders*log(n);

% Best parameter is the minimum BIC
[BestParameterOrder,idx] = min(BIC);

% Plot BIC for all orders
figure(1), clf
plot(Orders,BIC,'s'), hold on
plot(Orders(idx),BestParameterOrder,'go','markersize',10,'markerfacecolor','g')
zoom on

% Without BIC
% Orders = 40; idx=1;

% Polynomial fit
PolyCoefs = polyfit(t,Signal,Orders(idx));

% Estimated data based on the coefficients using polyval
PolyData = polyval(PolyCoefs,t); 

% Filtered signal is the difference of original and fitted 
FilterSignal = Signal - PolyData;


% Original Signal
figure(2), clf, hold on
plot(t,Signal,'b','linew',.5);


% Polynomial 
plot(t,PolyData,'r','linew',2)

% Filtered Signal
plot(t,FilterSignal,'m')
set(gca,'xlim',t([1 end]))

legend({'Original';'Polynomial';'Filtered Signal'})
